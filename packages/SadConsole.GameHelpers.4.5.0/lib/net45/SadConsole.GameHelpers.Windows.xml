<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SadConsole.GameHelpers.Windows</name>
    </assembly>
    <members>
        <member name="T:SadConsole.Game.Animations">
            <summary>
            Helpers related to <see cref="T:SadConsole.Consoles.AnimatedTextSurface"/> animations.
            </summary>
        </member>
        <member name="M:SadConsole.Game.Animations.CreateStatic(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Creates an animated surface that looks like static.
            </summary>
            <param name="width">The width of the surface.</param>
            <param name="height">The height of the surface.</param>
            <param name="frames">How many frames the animation should have.</param>
            <param name="blankChance">Chance a character will be blank. Characters are between index 48-158. Chance is evaluated versus <see cref="M:System.Random.NextDouble"/>.</param>
            <returns>An animation.</returns>
        </member>
        <member name="T:SadConsole.Game.GameObject">
            <summary>
            A positionable and animated game object.
            </summary>
        </member>
        <member name="F:SadConsole.Game.GameObject.NoMatrix">
            <summary>
            A translation matrix of 0, 0, 0.
            </summary>
        </member>
        <member name="E:SadConsole.Game.GameObject.AnimationStateChanged">
            <summary>
            Automatically forwards the <see cref="E:SadConsole.Consoles.AnimatedTextSurface.AnimationStateChanged"/> event.
            </summary>
        </member>
        <member name="F:SadConsole.Game.GameObject.renderer">
            <summary>
            Renderer used for drawing the game object.
            </summary>
        </member>
        <member name="F:SadConsole.Game.GameObject.repositionRects">
            <summary>
            Reposition the rects of the animation.
            </summary>
        </member>
        <member name="F:SadConsole.Game.GameObject.usePixelPositioning">
            <summary>
            Pixel positioning flag for position.
            </summary>
        </member>
        <member name="F:SadConsole.Game.GameObject.position">
            <summary>
            Where the console should be located on the screen.
            </summary>
        </member>
        <member name="F:SadConsole.Game.GameObject.animation">
            <summary>
            Animation for the game object.
            </summary>
        </member>
        <member name="F:SadConsole.Game.GameObject.font">
            <summary>
            Font for the game object.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObject.Name">
            <summary>
            Gets the name of this animation.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObject.Font">
            <summary>
            Font for the game object.
            </summary>
        </member>
        <member name="F:SadConsole.Game.GameObject.renderOffset">
            <summary>
            An offset of where the object is rendered.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObject.Renderer">
            <summary>
            Renderer used to draw the animation of the game object to the screen.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObject.RenderOffset">
            <summary>
            Offset applied to drawing the game object.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObject.Position">
            <summary>
            Gets or sets the position to render the cells.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObject.UsePixelPositioning">
            <summary>
            Treats the <see cref="P:SadConsole.Game.GameObject.Position"/> of the console as if it is pixels and not cells.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObject.Animation">
            <summary>
            The current animation.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObject.Animations">
            <summary>
            Collection of animations associated with this game object.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObject.IsVisible">
            <summary>
            When false, this <see cref="T:SadConsole.Game.GameObject"/> won't be rendered.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObject.RepositionRects">
            <summary>
            When true, the position of the game object will offset all of the surface rects instead of using a positioning matrix for rendering.
            </summary>
        </member>
        <member name="M:SadConsole.Game.GameObject.#ctor">
            <summary>
            Creates a new GameObject with the default font.
            </summary>
        </member>
        <member name="M:SadConsole.Game.GameObject.#ctor(SadConsole.Font)">
            <summary>
            Creates a new GameObject.
            </summary>
        </member>
        <member name="M:SadConsole.Game.GameObject.OnPositionChanged(Microsoft.Xna.Framework.Point)">
            <summary>
            Called when the <see cref="P:SadConsole.Game.GameObject.Position" /> property changes.
            </summary>
            <param name="oldLocation">The location before the change.</param>
        </member>
        <member name="M:SadConsole.Game.GameObject.UpdateRects(Microsoft.Xna.Framework.Point,System.Boolean)">
            <summary>
            Resets all of the rects of the animation based on <see cref="P:SadConsole.Game.GameObject.UsePixelPositioning"/> and if <see cref="P:SadConsole.Game.GameObject.RepositionRects"/> is true.
            </summary>
            <param name="position">The position of the game object.</param>
            <param name="force">When true, always repositions rects.</param>
        </member>
        <member name="M:SadConsole.Game.GameObject.UpdateAnimationRectangles">
            <summary>
            Forces the rendering rectangles to update with positioning information.
            </summary>
        </member>
        <member name="M:SadConsole.Game.GameObject.Render">
            <summary>
            Draws the game object.
            </summary>
        </member>
        <member name="M:SadConsole.Game.GameObject.Update">
            <summary>
            Updates the animation.
            </summary>
        </member>
        <member name="M:SadConsole.Game.GameObject.Save(System.String,System.Type[])">
            <summary>
            Saves this <see cref="T:SadConsole.Game.GameObject"/> to a file.
            </summary>
            <param name="file">The file to save.</param>
            <param name="knownTypes">The type of <see cref="P:SadConsole.Game.GameObject.Renderer"/>.</param>
        </member>
        <member name="M:SadConsole.Game.GameObject.Load(System.String,System.Type[])">
            <summary>
            Loads a <see cref="T:SadConsole.Game.GameObject"/> from a file.
            </summary>
            <param name="file">The file to load.</param>
            <param name="knownTypes">The type of <see cref="P:SadConsole.Game.GameObject.Renderer"/>.</param>
            <returns>A new GameObject.</returns>
        </member>
        <member name="T:SadConsole.Game.GameObjectSerialized">
            <summary>
            Serialized instance of a <see cref="T:SadConsole.Game.GameObject"/>.
            </summary>
        </member>
        <member name="T:SadConsole.Game.GameObjectCollection">
            <summary>
            A collection of game objects with cached renderer
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObjectCollection.Item(System.Int32)">
            <summary>
            Gets or sets a game object by index.
            </summary>
            <param name="index">Index in the collection.</param>
            <returns>A game object.</returns>
        </member>
        <member name="P:SadConsole.Game.GameObjectCollection.Count">
            <summary>
            The amount of items in the collection.
            </summary>
        </member>
        <member name="P:SadConsole.Game.GameObjectCollection.IsReadOnly">
            <summary>
            Always false.
            </summary>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.Add(SadConsole.Game.GameObject)">
            <summary>
            Adds a game object to the collection and sets <see cref="P:SadConsole.Game.GameObject.RepositionRects"/> to true.
            </summary>
            <param name="item">The game object.</param>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.Clear">
            <summary>
            Removes all game objects from the collection.
            </summary>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.Contains(SadConsole.Game.GameObject)">
            <summary>
            Returns true when the specified game object exists.
            </summary>
            <param name="item">The game object.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.CopyTo(SadConsole.Game.GameObject[],System.Int32)">
            <summary>
            Copies the collection to an array, starting at the specified index.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The starting index.</param>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the collection.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.IndexOf(SadConsole.Game.GameObject)">
            <summary>
            Gets the index of a game object.
            </summary>
            <param name="item">The game object.</param>
            <returns></returns>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.Insert(System.Int32,SadConsole.Game.GameObject)">
            <summary>
            Inserts a game object at the specified index.
            </summary>
            <param name="index">The index of where the game object will be inserted at.</param>
            <param name="item">The game object.</param>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.Remove(SadConsole.Game.GameObject)">
            <summary>
            Removes the first occurrence of a game object.
            </summary>
            <param name="item">The game object.</param>
            <returns>Returns true if successful.</returns>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a game object at the specified index.
            </summary>
            <param name="index">The index to remove at.</param>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator for the collection.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.#ctor">
            <summary>
            Creates a new empty game object collection.
            </summary>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.#ctor(System.Collections.Generic.List{SadConsole.Game.GameObject}@)">
            <summary>
            Links (by reference) an existing list of game objects to be managed by this collection object.
            </summary>
            <param name="managedList">The game object list.</param>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.#ctor(SadConsole.Game.GameObject[])">
            <summary>
            Creates a new game object collection with the specified objects.
            </summary>
            <param name="initialObjects">The objects to add to this game collection.</param>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.Render">
            <summary>
            Draws all of the game objects to the screen.
            </summary>
        </member>
        <member name="M:SadConsole.Game.GameObjectCollection.Update">
            <summary>
            Processes the updates for each game object.
            </summary>
        </member>
        <member name="T:SadConsole.Game.Hotspot">
            <summary>
            A group of positions with a set of settings.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Hotspot.Positions">
            <summary>
            The hotspot position on the map.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Hotspot.Title">
            <summary>
            A title for the area.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Hotspot.DebugAppearance">
            <summary>
            A visual for the hotspot to help debug.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Hotspot.Settings">
            <summary>
            Key-value pairs for the hotspot.
            </summary>
        </member>
        <member name="M:SadConsole.Game.Hotspot.Contains(Microsoft.Xna.Framework.Point)">
            <summary>
            Return true when the specified point is in the list of <see cref="F:SadConsole.Game.Hotspot.Positions"/>.
            </summary>
            <param name="point">The position to check for.</param>
            <returns>True or false based on if the position is associated with the Hotspot.</returns>
        </member>
        <member name="T:SadConsole.Game.RangeInt">
            <summary>
            Produces values based on a minimum and maximum range.
            </summary>
        </member>
        <member name="F:SadConsole.Game.RangeInt.Maximum">
            <summary>
            The maximum value.
            </summary>
        </member>
        <member name="F:SadConsole.Game.RangeInt.Minimum">
            <summary>
            The minimum value.
            </summary>
        </member>
        <member name="M:SadConsole.Game.RangeInt.Get">
            <summary>
            Gets a random number between the <see cref="F:SadConsole.Game.RangeInt.Minimum"/> and <see cref="F:SadConsole.Game.RangeInt.Maximum"/>.
            </summary>
            <returns>A random number.</returns>
        </member>
        <member name="T:SadConsole.Game.RangeDouble">
            <summary>
            Produces values based on a minimum and maximum range.
            </summary>
        </member>
        <member name="F:SadConsole.Game.RangeDouble.Maximum">
            <summary>
            The maximum value.
            </summary>
        </member>
        <member name="F:SadConsole.Game.RangeDouble.Minimum">
            <summary>
            The minimum value.
            </summary>
        </member>
        <member name="M:SadConsole.Game.RangeDouble.Get">
            <summary>
            Gets a random number between the <see cref="F:SadConsole.Game.RangeDouble.Minimum"/> and <see cref="F:SadConsole.Game.RangeDouble.Maximum"/>.
            </summary>
            <returns>A random number.</returns>
        </member>
        <member name="T:SadConsole.Game.Scene">
            <summary>
            Groups a <see cref="T:SadConsole.Consoles.LayeredTextSurface"/> and a list of <see cref="T:SadConsole.Game.GameObject"/> types together.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Scene.Objects">
            <summary>
            The objects for the scene.
            </summary>
        </member>
        <member name="P:SadConsole.Game.Scene.BackgroundSurface">
            <summary>
            The background of the scene.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Scene.Zones">
            <summary>
            Regions defined for the scene.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Scene.Hotspots">
            <summary>
            Hotspots defined for the scene.
            </summary>
        </member>
        <member name="P:SadConsole.Game.Scene.Width">
            <summary>
            Width of the backing <see cref="T:SadConsole.Consoles.LayeredTextSurface"/>.
            </summary>
        </member>
        <member name="P:SadConsole.Game.Scene.Height">
            <summary>
            Height of the backing <see cref="T:SadConsole.Consoles.LayeredTextSurface"/>.
            </summary>
        </member>
        <member name="P:SadConsole.Game.Scene.BackingConsole">
            <summary>
            Access to the backing console that is internally wrapped in this scene.
            </summary>
        </member>
        <member name="M:SadConsole.Game.Scene.#ctor(SadConsole.Consoles.LayeredTextSurface)">
            <summary>
            Creates a new Scene from an existing <see cref="T:SadConsole.Consoles.LayeredTextSurface"/>.
            </summary>
            <param name="surface">The surface for the scene.</param>
        </member>
        <member name="T:SadConsole.Game.Zone">
            <summary>
            Defines an area for a scene.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Zone.Area">
            <summary>
            The area the zone covers.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Zone.Title">
            <summary>
            A title for the area.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Zone.DebugAppearance">
            <summary>
            A visual for the area to help debug.
            </summary>
        </member>
        <member name="F:SadConsole.Game.Zone.Settings">
            <summary>
            Key-value pairs for the zone.
            </summary>
        </member>
        <member name="T:SadConsole.Libraries.GameHelpers">
            <summary>
            Represents the GameHelpers library.
            </summary>
        </member>
        <member name="M:SadConsole.Libraries.GameHelpers.Initialize">
            <summary>
            Should be called when you first use the library so that things hook up to SadConsole.Core correctly.
            </summary>
        </member>
    </members>
</doc>
